/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scanner;

import graphreduction.CGraph;
import graphreduction.CGraphManager;
import graphreduction.CNode;
import highlight.CTokenMarker;
import highlight.JEditTextArea;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Humanoide
 */
public class Entorno extends javax.swing.JFrame {

    /**
     * Creates new form Entorno
     */
    JEditTextArea je = new JEditTextArea();
    parser p;

    public Entorno() {
        initComponents();
        je.setTokenMarker(new CTokenMarker());
        je.setVisible(true);
        je.setSize(800, getHeight() - 40);
        je.setCaretBlinkEnabled(true);
        je.setElectricScroll(ERROR);
        je.setHorizontalOffset(10);
        je.setOverwriteEnabled(true);
        jPanel1.add(je);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Pegar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Abrir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setText("Analizar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jToggleButton1.setText("Mode");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(861, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                    .addComponent(jToggleButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jToggleButton1)
                .addContainerGap(385, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 13, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        je.paste();
    }//GEN-LAST:event_jButton1ActionPerformed
    String msj = "";
    // CGraphManager manager=new CGraphManager();
    String mm;
    String fileName;

    private String abrirArchivo() {
        String aux = "";
        String texto;
        texto = "";
        try {
            JFileChooser file = new JFileChooser(System.getProperty("user.dir") + "/programasC");
            file.showOpenDialog(this);
            File abre = file.getSelectedFile();
            fileName = file.getName(abre).replace(".c", "");
            if (abre != null) {
                FileReader archivos = new FileReader(abre);
                BufferedReader lee = new BufferedReader(archivos);
                while ((aux = lee.readLine()) != null) {
                    texto += aux + "\n";
                }
                lee.close();
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, ex + ""
                    + "\nNo se ha encontrado el archivo",
                    "ADVERTENCIA!!!", JOptionPane.WARNING_MESSAGE);
        }
        return texto;
    }
    boolean band=true;
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            msj = "";
            // TODO add your handling code here:
            String Cadena = je.getText();
            /*ESTA CÃ“DIGO ME SIRVE PARA JALAR EL TEXTO Y QUE LO ANALIZE EL PARSER*/
            p = new parser(new Yylex(new BufferedReader(new StringReader(Cadena))));
            p.parse();
            /*OOLEXP ES UNA LISTA CON LAS EXPRESIONES BOOLEANAS PERO DE TODO EL PROGRAMA*/

            String exps = p.action_obj.boolexp.toString();
            CNode nod = p.action_obj.program;
            msj = msj + "digraph G {\nnode [style=filled];\n";
            LinkedList<functionIndex> fn = p.action_obj.fnList;
            for (functionIndex c : fn) {
                CGraph graph = new CGraph();
                graph.addBeginNode(c.getStart());
                graph.addEndNode(c.getEnd());
                //graph.compressNodes();
                mm = "%size%" + "\n";
                mm = mm + graph.getBeginNode().getId() + "\n";
                mm = mm + graph.getEndNode().getId() + "\n";
                explore(graph.getBeginNode());
                mm = mm.replace("%size%", labels.size() + "");
                labels.clear();
                added.clear();
                write(fileName + "_" + c.getName(), mm);
                mm = "";
                CGraphManager.addGraph(c.getName(), graph);
            }
            msj = msj + "}";
            
            /*
            StringSelection stringSelection = new StringSelection(msj);
            Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
            clpbrd.setContents(stringSelection, null);
            JOptionPane.showMessageDialog(null, exps);
             */
        } catch (Exception ex) {
            Logger.getLogger(Entorno.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        je.setText(abrirArchivo());
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jToggleButton1ActionPerformed
    ArrayList<String> added = new ArrayList<String>();
    HashSet<Integer> labels = new HashSet<Integer>();

    public void explore(CNode n) {
        if (n.m_pLeftNode != null && n.m_pRightNode == null && !n.m_GExplored) {
            //g.addEdge(n.getId() + " " + n.m_pLeftNode.getId() + "", n.getId() + " " + n.getSingleCodeLine(), n.m_pLeftNode.getId() + " " + n.m_pLeftNode.getSingleCodeLine());
            String m = "" + n.getId()
                    + " " + n.m_pLeftNode.getId() + "\n";
            labels.add(n.getId());
            labels.add(n.m_pLeftNode.getId());
            boolean band = false;
            for (int i = 0; i < added.size(); i++) {
                if (m.equals(added.get(i))) {
                    band = true;
                    break;
                }
            }
            added.add(m);
            if (!band) {
                mm = mm + m;
            }
            n.m_GExplored = true;
            explore(n.m_pLeftNode);
        }
        if (n.m_pRightNode != null) {
            //g.addEdge(n.getId() + " " + n.m_pLeftNode.getId() + "", n.getId() + " " + n.getSingleCodeLine(), n.m_pLeftNode.getId() + " " + n.m_pLeftNode.getSingleCodeLine());
           // g.addEdge(n.getId() + " " + n.m_pRightNode.getId() + "", n.getId() + " " + n.getSingleCodeLine(), n.m_pRightNode.getId() + " " + n.m_pRightNode.getSingleCodeLine());
            String m = "" + n.getId()
                    + " " + n.m_pLeftNode.getId() + " " + n.m_pRightNode.getId() + "\n";
            labels.add(n.getId());
            labels.add(n.m_pRightNode.getId());
            boolean band = false;
            for (int i = 0; i < added.size(); i++) {
                if (m.equals(added.get(i))) {
                    band = true;
                    break;
                }
            }
            added.add(m);
            if (!band) {
                mm = mm + m;
            }
            n.m_GExplored = true;
            explore(n.m_pLeftNode);
            explore(n.m_pRightNode);
        }

    }
    /**
     * ESCRIBIR EN UN FICHERO
     * @param name
     * @param cont 
     */
    public void write(String name, String cont) {
        FileWriter fichero = null;
        BufferedWriter pw = null;
        try {
            fichero = new FileWriter(System.getProperty("user.dir") + "/Salidas/" + name + ".txt");
            pw = new BufferedWriter(fichero);
            pw.write(cont);
            pw.close();

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (null != fichero) {
                    fichero.close();
                }
            } catch (Exception e2) {
                e2.printStackTrace();
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Entorno.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Entorno.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Entorno.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Entorno.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Entorno().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
}
